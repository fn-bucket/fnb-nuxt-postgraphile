query AppTenantSubscriptionById(
  $appTenantSubscriptionId: String!
){
  appTenantSubscriptionById(id: $appTenantSubscriptionId) {
      ...Subscription01
  }

  currentAppTenantActiveSubscriptions {
    nodes {
      ...Subscription01
    }
  }
  
  allLicenseTypes (condition: {permissionKey: USER}) {
    nodes {
      key
    }
  }
}




fragment Subscription01 on AppTenantSubscription {
  id
  appTenantId
  expirationDate
  inactive
  isAnchorSubscription
  renewalBehavior
  createdDate
  availableUpgradePaths {
    nodes {
      id
      key
      name
    }
  }
  availableAddOns {
    nodes {
      id
      key
      name
    }
  }
  availableLicenses {
    nodes {
      licensePackLicenseType {
        id
        licenseTypeKey
      }
      availableCount
      provisionedCount
      activeCount
      inactiveCount
      canProvision
      voidCount
      expiredCount
    }
  }
  appTenant: appTenantByAppTenantId {
    id
    name
    appUsersByAppTenantId(
      condition: { permissionKey: ADMIN }
      first: 1
      orderBy: CREATED_AT_DESC
    ) {
      nodes {
        id
        username
        contact: contactByContactId {
          id
          firstName
          lastName
          email
        }
      }
    }
  }
  licensePack: licensePackByLicensePackId {
    id
    name
    key
    price
    type
    availability
    renewalFrequency
    upgradeConfig {
      upgradePaths {
        licensePackKey
        licenseTypeUpgrades {
          sourceLicenseTypeKey
          targetLicenseTypeKey
        }
      }
    }
    licenseTypes: licensePackLicenseTypesByLicensePackId {
      nodes {
        id
        licenseTypeKey
        licenseCount
        assignUponSubscription
        unlimitedProvision
      	expirationInterval
      }
    }
  }
  assignedLicenses: licensesBySubscriptionId {
    nodes {
      id
      name
      licenseTypeKey
      inactive
      canActivate
      status
      expirationDate
      statusReason
      assignedToAppUser: appUserByAssignedToAppUserId {
        id
        username
        appTenant: appTenantByAppTenantId {
          id
          name
        }
        contact: contactByContactId {
          id
          fullName
          firstName
          lastName
          email
          cellPhone
          officePhone
        }
      }
    }
  }
}